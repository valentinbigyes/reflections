Q1
What happens when you initialize a repository? Why do you need to do it?

In the directory a hidden folder .git is created. This folder is used by git to store the meta data about the repository.




Q2
How is the staging area different from the working directory and the repository? What value do you think it offers?

It must not contain all files from th working directory. Thereby I can commit only a fraction of a multitude of changes and form logically isolated commits in the repo.



Q3
How can you use the staging area to make sure you have one commit per logical change?

If I changed several files, ican draw them into the changing are 1 by 1 and commit them. But if I changed 1 file several times it is always togeter as 1 commmit.



Q4
What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Building a translated Version step by step over time.
Trying out a new feature.
Building a new feature while somebody else builds a feature at the same time.
I can make channges and can always go back. I can keep up, and develop, a working preview or system in parallel.




Q5
How do the diagrams help you visualize the branch structure?

not eyery log contains all commits.
making a diagram of commit logs from each tip (branch end) and looking where these logs intersect i can build up a tree structure.
This tree is helpful, to see what features and changes will be included from each branch when I plan a merge.



Q6
What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The result is a combination of all changes in the two branches. And a new commit with these two.



Q7
What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Pro is that I do not have to review all changes that potentially do not influence each other. Huge time saving.
Cons: some changes I do not see.
I suppose, that after a merge a bug could evolve, because two lines do not .. or macybe not. Because in code things can only interact when they are defined in the same lines.



